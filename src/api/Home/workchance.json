[
  {
    "id": 1,
    "icon": {
      "url": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1511365715875&di=6abbe87002d6648b563d2a2c6d1cb95c&imgtype=0&src=http%3A%2F%2Fg.hiphotos.baidu.com%2Fbaike%2Fw%253D268%2Fsign%3Dab6d81bcad51f3dec3b2be62aceff0ec%2Fa71ea8d3fd1f4134a1714c08271f95cad1c85e05.jpg",
      "alt": "react"
    },
    "area": "JavaEE软件开发",
    "type": "工程师定岗生",
    "description": "Java原来是用作编写消费类家用电子产品软件的语言，所以它是被设计成写高可靠和稳健软件的。Java消除了某些编程错误，使得用它写可靠软件相当容易。\nJava是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。可靠性方面最重要的增强之一是Java的存储模型。Java不支持指针，它消除重写存储和讹误数据的可能性。类似地，Java自动的“无用单元收集”预防存储漏泄和其它有关动态存储分配和解除分配的有害错误。Java解释程序也执行许多运行时的检查，诸如验证所有数组和串访问是否在界限之内。\n异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用try/catch/finally语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务。"
  },
  {
    "id": 2,
    "icon": {
      "url": "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1511365715875&di=6abbe87002d6648b563d2a2c6d1cb95c&imgtype=0&src=http%3A%2F%2Fg.hiphotos.baidu.com%2Fbaike%2Fw%253D268%2Fsign%3Dab6d81bcad51f3dec3b2be62aceff0ec%2Fa71ea8d3fd1f4134a1714c08271f95cad1c85e05.jpg",
      "alt": "react"
    },
    "area": "JavaEE软件开发",
    "type": "工程师定岗生",
    "description": "Java原来是用作编写消费类家用电子产品软件的语言，所以它是被设计成写高可靠和稳健软件的。Java消除了某些编程错误，使得用它写可靠软件相当容易。\nJava是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。可靠性方面最重要的增强之一是Java的存储模型。Java不支持指针，它消除重写存储和讹误数据的可能性。类似地，Java自动的“无用单元收集”预防存储漏泄和其它有关动态存储分配和解除分配的有害错误。Java解释程序也执行许多运行时的检查，诸如验证所有数组和串访问是否在界限之内。\n异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用try/catch/finally语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务。"
  }
]